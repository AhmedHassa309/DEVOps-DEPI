#max requsts is 10 times in min (limit rate)
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=10r/m;

#servers
upstream backend {
        server 127.0.0.1:9000;
        server 127.0.0.1:9001;
}

#redirect to https
server {
    listen 80;
    server_name ahmedzain.com;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
	server_name ahmedzain.com;

	ssl_certificate /etc/ssl/certs/selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/selfsigned.key;

	root /var/www/AhmedZain.com;
	index index.php;
	
	#compression files
	gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
	
	#connection disconnect after 65 sec
    keepalive_timeout 65;

	# client max body size
    client_max_body_size 10M;

	location / {
		try_files $uri $uri/ =404;
		etag on;
		#date of last change this to download just modified files
        add_header Last-Modified $date_gmt;
	}
	
	# Cache static files
	location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
		expires 30d;
		add_header Cache-Control "public, no-transform";
	}
	
	#activation to limiting rate
	location /login {
	limit_req zone=login_limit burst=5 nodelay;
	
    }

	# Reverse Proxy using backend load balancer
	location /api/ {
		proxy_pass http://backend;
		#save the original name of host
		proxy_set_header Host $host;
		#backend see real ip of client not think it from nginx
		proxy_set_header X-Real-IP $remote_addr;
		#send all IPs of devices that request go through it
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#send clien write http or https
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	#php files
	location ~ \.php$ {

		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php8.1-fpm.sock;

		add_header Cache-Control "no-store, no-cache, must-revalidate";
		add_header Pragma "no-cache";
	}

	# Security Headers(block iframe - dont switch to http for 2 years)
	add_header X-Frame-Options "DENY" always;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	
	# block IP 
	set $block_ip 0;
	if ($remote_addr = 192.168.1.100) {	
    		set $block_ip 1;
	}   
	if ($block_ip) {	  
		 return 404;
	}
	# Health check endpoint to make sure server is working
	location = /health {
		add_header Content-Type text/plain;
		return 200 "OK\n";
	}

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
}
